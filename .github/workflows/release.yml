name: Build & Release ZIP

on:
  push:
    tags: ['v*']             # es. v1.0.1
  release:
    types: [published]       # se pubblichi la release dalla UI
  workflow_dispatch:         # avvio manuale: produce solo artifact

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # necessario per creare/aggiornare la release

    env:
      PLUGIN: easy-wa-contact-button

    steps:
      - uses: actions/checkout@v4

      - name: Build plugin zip
        run: |
          mkdir -p dist/$PLUGIN
          rsync -a --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='dist' \
            --exclude='.DS_Store' \
            --exclude='node_modules' \
            --exclude='vendor' \
            --exclude='*.zip' \
            ./ dist/$PLUGIN/
          cd dist
          # nome file = easy-wa-contact-button-<ref>.zip (es. v1.0.1 oppure main)
          zip -r ${PLUGIN}-${GITHUB_REF_NAME}.zip $PLUGIN

      # Caso 1: release creata dalla UI -> allega lo zip a QUELLA release
      - name: Attach zip to existing release (UI flow)
        if: ${{ github.event_name == 'release' }}
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Caso 2: push di un tag -> crea la release e carica lo zip
      - name: Create release (tag push flow)
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}          # es. v1.0.1
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload release asset (tag push flow)
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ env.PLUGIN }}-${{ github.ref_name }}.zip
          asset_name: ${{ env.PLUGIN }}-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      # Caso 3: avvio manuale -> niente release, ma carica lo zip come artifact
      - name: Upload artifact (manual run)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/upload-artifact@v4
        with:
          name: plugin-zip
          path: dist/*.zip
